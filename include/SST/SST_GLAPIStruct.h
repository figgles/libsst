/* AUTOGENERATED BY parsegl.c -- DO NOT MODIFY */
#ifndef _SST_GLAPISTRUCT_H
#define _SST_GLAPISTRUCT_H

#include <SST/SST_GLAPIDefs.h>

typedef struct SST_GLAPI
{
	void (OGLCALL* ActiveTexture)(GLenum);
	void (OGLCALL* AttachShader)(GLuint, GLuint);
	void (OGLCALL* BeginConditionalRender)(GLuint, GLenum);
	void (OGLCALL* BeginQuery)(GLenum, GLuint);
	void (OGLCALL* BeginTransformFeedback)(GLenum);
	void (OGLCALL* BindAttribLocation)(GLuint, GLuint, const GLchar*);
	void (OGLCALL* BindBuffer)(GLenum, GLuint);
	void (OGLCALL* BindBufferBase)(GLenum, GLuint, GLuint);
	void (OGLCALL* BindBufferRange)(GLenum, GLuint, GLuint, GLintptr, GLsizeiptr);
	void (OGLCALL* BindFragDataLocation)(GLuint, GLuint, const GLchar*);
	void (OGLCALL* BindFragDataLocationIndexed)(GLuint, GLuint, GLuint, const GLchar*);
	void (OGLCALL* BindFramebuffer)(GLenum, GLuint);
	void (OGLCALL* BindRenderbuffer)(GLenum, GLuint);
	void (OGLCALL* BindSampler)(GLuint, GLuint);
	void (OGLCALL* BindTexture)(GLenum, GLuint);
	void (OGLCALL* BindVertexArray)(GLuint);
	void (OGLCALL* BlendColor)(GLclampf, GLclampf, GLclampf, GLclampf);
	void (OGLCALL* BlendEquation)(GLenum);
	void (OGLCALL* BlendEquationSeparate)(GLenum, GLenum);
	void (OGLCALL* BlendFunc)(GLenum, GLenum);
	void (OGLCALL* BlendFuncSeparate)(GLenum, GLenum, GLenum, GLenum);
	void (OGLCALL* BlitFramebuffer)(GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum);
	void (OGLCALL* BufferData)(GLenum, GLsizeiptr, const GLvoid*, GLenum);
	void (OGLCALL* BufferSubData)(GLenum, GLintptr, GLsizeiptr, const GLvoid*);
	GLenum (OGLCALL* CheckFramebufferStatus)(GLenum);
	void (OGLCALL* ClampColor)(GLenum, GLenum);
	void (OGLCALL* Clear)(GLbitfield);
	void (OGLCALL* ClearBufferiv)(GLenum, GLint, const GLint*);
	void (OGLCALL* ClearBufferuiv)(GLenum, GLint, const GLuint*);
	void (OGLCALL* ClearBufferfv)(GLenum, GLint, const GLfloat*);
	void (OGLCALL* ClearBufferfi)(GLenum, GLint, GLfloat, GLint);
	void (OGLCALL* ClearColor)(GLclampf, GLclampf, GLclampf, GLclampf);
	void (OGLCALL* ClearDepth)(GLclampd);
	void (OGLCALL* ClearStencil)(GLint);
	GLenum (OGLCALL* ClientWaitSync)(GLsync, GLbitfield, GLuint64);
	void (OGLCALL* ColorMask)(GLboolean, GLboolean, GLboolean, GLboolean);
	void (OGLCALL* ColorMaski)(GLuint, GLboolean, GLboolean, GLboolean, GLboolean);
	void (OGLCALL* CompileShader)(GLuint);
	void (OGLCALL* CompressedTexImage1D)(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, const GLvoid*);
	void (OGLCALL* CompressedTexImage2D)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, const GLvoid*);
	void (OGLCALL* CompressedTexImage3D)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, const GLvoid*);
	void (OGLCALL* CompressedTexSubImage1D)(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, const GLvoid*);
	void (OGLCALL* CompressedTexSubImage2D)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, const GLvoid*);
	void (OGLCALL* CompressedTexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, const GLvoid*);
	void (OGLCALL* CopyBufferSubData)(GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr);
	void (OGLCALL* CopyTexImage1D)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint);
	void (OGLCALL* CopyTexImage2D)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint);
	void (OGLCALL* CopyTexSubImage1D)(GLenum, GLint, GLint, GLint, GLint, GLsizei);
	void (OGLCALL* CopyTexSubImage2D)(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
	void (OGLCALL* CopyTexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
	GLuint (OGLCALL* CreateProgram)();
	GLuint (OGLCALL* CreateShader)(GLenum);
	void (OGLCALL* CullFace)(GLenum);
	void (OGLCALL* DeleteBuffers)(GLsizei, const GLuint*);
	void (OGLCALL* DeleteFramebuffers)(GLsizei, GLuint*);
	void (OGLCALL* DeleteProgram)(GLuint);
	void (OGLCALL* DeleteQueries)(GLsizei, const GLuint*);
	void (OGLCALL* DeleteRenderbuffers)(GLsizei, GLuint*);
	void (OGLCALL* DeleteSamplers)(GLsizei, const GLuint*);
	void (OGLCALL* DeleteShader)(GLuint);
	void (OGLCALL* DeleteSync)(GLsync);
	void (OGLCALL* DeleteTextures)(GLsizei, const GLuint*);
	void (OGLCALL* DeleteVertexArrays)(GLsizei, const GLuint*);
	void (OGLCALL* DepthFunc)(GLenum);
	void (OGLCALL* DepthMask)(GLboolean);
	void (OGLCALL* DepthRange)(GLclampd, GLclampd);
	void (OGLCALL* DetachShader)(GLuint, GLuint);
	void (OGLCALL* Disable)(GLenum);
	void (OGLCALL* DisableVertexAttribArray)(GLuint);
	void (OGLCALL* Disablei)(GLenum, GLuint);
	void (OGLCALL* DrawArrays)(GLenum, GLint, GLsizei);
	void (OGLCALL* DrawArraysInstanced)(GLenum, GLint, GLsizei, GLsizei);
	void (OGLCALL* DrawBuffer)(GLenum);
	void (OGLCALL* DrawBuffers)(GLsizei, const GLenum*);
	void (OGLCALL* DrawElements)(GLenum, GLsizei, GLenum, const GLvoid*);
	void (OGLCALL* DrawElementsBaseVertex)(GLenum, GLsizei, GLenum, const GLvoid*, GLint);
	void (OGLCALL* DrawElementsInstanced)(GLenum, GLsizei, GLenum, const GLvoid*, GLsizei);
	void (OGLCALL* DrawElementsInstancedBaseVertex)(GLenum, GLsizei, GLenum, GLvoid*, GLsizei, GLint);
	void (OGLCALL* DrawRangeElements)(GLenum, GLuint, GLuint, GLsizei, GLenum, const GLvoid*);
	void (OGLCALL* DrawRangeElementsBaseVertex)(GLenum, GLuint, GLuint, GLsizei, GLenum, GLvoid*, GLint);
	void (OGLCALL* Enable)(GLenum);
	void (OGLCALL* EnableVertexAttribArray)(GLuint);
	void (OGLCALL* Enablei)(GLenum, GLuint);
	void (OGLCALL* EndQuery)(GLenum);
	void (OGLCALL* EndTransformFeedback)();
	GLsync (OGLCALL* FenceSync)(GLenum, GLbitfield);
	void (OGLCALL* Finish)();
	void (OGLCALL* Flush)();
	void (OGLCALL* FlushMappedBufferRange)(GLenum, GLintptr, GLsizeiptr);
	void (OGLCALL* FramebufferRenderbuffer)(GLenum, GLenum, GLenum, GLuint);
	void (OGLCALL* FramebufferTexture)(GLenum, GLenum, GLuint, GLint);
	void (OGLCALL* FramebufferTexture1D)(GLenum, GLenum, GLenum, GLuint, GLint);
	void (OGLCALL* FramebufferTexture2D)(GLenum, GLenum, GLenum, GLuint, GLint);
	void (OGLCALL* FramebufferTexture3D)(GLenum, GLenum, GLenum, GLuint, GLint, GLint);
	void (OGLCALL* FramebufferTextureLayer)(GLenum, GLenum, GLuint, GLint, GLint);
	void (OGLCALL* FrontFace)(GLenum);
	void (OGLCALL* GenBuffers)(GLsizei, GLuint*);
	void (OGLCALL* GenFramebuffers)(GLsizei, GLuint*);
	void (OGLCALL* GenQueries)(GLsizei, GLuint*);
	void (OGLCALL* GenRenderbuffers)(GLsizei, GLuint*);
	void (OGLCALL* GenSamplers)(GLsizei, GLuint*);
	void (OGLCALL* GenTextures)(GLsizei, GLuint*);
	void (OGLCALL* GenVertexArrays)(GLsizei, GLuint*);
	void (OGLCALL* GenerateMipmap)(GLenum);
	void (OGLCALL* GetBooleanv)(GLenum, GLboolean*);
	void (OGLCALL* GetDoublev)(GLenum, GLdouble*);
	void (OGLCALL* GetFloatv)(GLenum, GLfloat*);
	void (OGLCALL* GetIntegerv)(GLenum, GLint*);
	void (OGLCALL* GetInteger64v)(GLenum, GLint64*);
	void (OGLCALL* GetActiveAttrib)(GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*);
	void (OGLCALL* GetActiveUniform)(GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*);
	void (OGLCALL* GetActiveUniformBlockiv)(GLuint, GLuint, GLenum, GLint*);
	void (OGLCALL* GetActiveUniformBlockName)(GLuint, GLuint, GLsizei, GLsizei*, GLchar*);
	void (OGLCALL* GetActiveUniformName)(GLuint, GLuint, GLsizei, GLsizei*, GLchar*);
	void (OGLCALL* GetActiveUniformsiv)(GLuint, GLsizei, const GLuint*, GLenum, GLint*);
	void (OGLCALL* GetAttachedShaders)(GLuint, GLsizei, GLsizei*, GLuint*);
	GLint (OGLCALL* GetAttribLocation)(GLuint, const GLchar*);
	void (OGLCALL* GetBufferParameteriv)(GLenum, GLenum, GLint*);
	void (OGLCALL* GetBufferPointerv)(GLenum, GLenum, GLvoid**);
	void (OGLCALL* GetBufferSubData)(GLenum, GLintptr, GLsizeiptr, GLvoid*);
	void (OGLCALL* GetCompressedTexImage)(GLenum, GLint, GLvoid*);
	GLenum (OGLCALL* GetError)();
	GLint (OGLCALL* GetFragDataIndex)(GLuint, const char*);
	GLint (OGLCALL* GetFragDataLocation)(GLuint, const char*);
	void (OGLCALL* GetFramebufferAttachmentParameteriv)(GLenum, GLenum, GLenum, GLint*);
	void (OGLCALL* GetMultisamplefv)(GLenum, GLuint, GLfloat*);
	void (OGLCALL* GetProgramiv)(GLuint, GLenum, GLint*);
	void (OGLCALL* GetProgramInfoLog)(GLuint, GLsizei, GLsizei*, GLchar*);
	void (OGLCALL* GetQueryObjectiv)(GLuint, GLenum, GLint*);
	void (OGLCALL* GetQueryObjectuiv)(GLuint, GLenum, GLuint*);
	void (OGLCALL* GetQueryObjecti64v)(GLuint, GLenum, GLint64*);
	void (OGLCALL* GetQueryObjectui64v)(GLuint, GLenum, GLuint64*);
	void (OGLCALL* GetQueryiv)(GLenum, GLenum, GLint*);
	void (OGLCALL* GetRenderbufferParameteriv)(GLenum, GLenum, GLint*);
	void (OGLCALL* GetSamplerParameterfv)(GLuint, GLenum, GLfloat*);
	void (OGLCALL* GetSamplerParameteriv)(GLuint, GLenum, GLint*);
	void (OGLCALL* GetShaderiv)(GLuint, GLenum, GLint*);
	void (OGLCALL* GetShaderInfoLog)(GLuint, GLsizei, GLsizei*, GLchar*);
	void (OGLCALL* GetShaderSource)(GLuint, GLsizei, GLsizei*, GLchar*);
	const GLubyte* (OGLCALL* GetString)(GLenum);
	const GLubyte* (OGLCALL* GetStringi)(GLenum, GLuint);
	void (OGLCALL* GetSynciv)(GLsync, GLenum, GLsizei, GLsizei*, GLint*);
	void (OGLCALL* GetTexImage)(GLenum, GLint, GLenum, GLenum, GLvoid*);
	void (OGLCALL* GetTexLevelParameterfv)(GLenum, GLint, GLenum, GLfloat*);
	void (OGLCALL* GetTexLevelParameteriv)(GLenum, GLint, GLenum, GLint*);
	void (OGLCALL* GetTexParameterfv)(GLenum, GLenum, GLfloat*);
	void (OGLCALL* GetTexParameteriv)(GLenum, GLenum, GLint*);
	void (OGLCALL* GetTransformFeedbackVarying)(GLuint, GLuint, GLsizei, GLsizei*, GLsizei, GLenum*, GLchar*);
	void (OGLCALL* GetUniformfv)(GLuint, GLint, GLfloat*);
	void (OGLCALL* GetUniformiv)(GLuint, GLint, GLint*);
	GLuint (OGLCALL* GetUniformIndices)(GLuint, GLsizei, const GLchar**, GLuint*);
	GLint (OGLCALL* GetUniformLocation)(GLuint, const GLchar*);
	void (OGLCALL* GetVertexAttribdv)(GLuint, GLenum, GLdouble*);
	void (OGLCALL* GetVertexAttribfv)(GLuint, GLenum, GLfloat*);
	void (OGLCALL* GetVertexAttribiv)(GLuint, GLenum, GLint*);
	void (OGLCALL* GetVertexAttribIiv)(GLuint, GLenum, GLint*);
	void (OGLCALL* GetVertexAttribIuiv)(GLuint, GLenum, GLuint*);
	void (OGLCALL* GetVertexAttribPointerv)(GLuint, GLenum, GLvoid**);
	void (OGLCALL* Hint)(GLenum, GLenum);
	GLboolean (OGLCALL* IsBuffer)(GLuint);
	GLboolean (OGLCALL* IsEnabled)(GLenum);
	GLboolean (OGLCALL* IsEnabledi)(GLenum, GLuint);
	GLboolean (OGLCALL* IsFramebuffer)(GLuint);
	GLboolean (OGLCALL* IsProgram)(GLuint);
	GLboolean (OGLCALL* IsQuery)(GLuint);
	GLboolean (OGLCALL* IsRenderbuffer)(GLuint);
	GLboolean (OGLCALL* IsSampler)(GLuint);
	GLboolean (OGLCALL* IsShader)(GLuint);
	GLboolean (OGLCALL* IsSync)(GLsync);
	GLboolean (OGLCALL* IsTexture)(GLuint);
	GLboolean (OGLCALL* IsVertexArray)(GLuint);
	void (OGLCALL* LineWidth)(GLfloat);
	void (OGLCALL* LinkProgram)(GLuint);
	void (OGLCALL* LogicOp)(GLenum);
	void* (OGLCALL* MapBuffer)(GLenum, GLenum);
	void* (OGLCALL* MapBufferRange)(GLenum, GLintptr, GLsizeiptr, GLbitfield);
	void (OGLCALL* MultiDrawArrays)(GLenum, const GLint*, const GLsizei*, GLsizei);
	void (OGLCALL* MultiDrawElements)(GLenum, const GLsizei*, GLenum, const GLvoid**, GLsizei);
	void (OGLCALL* MultiDrawElementsBaseVertex)(GLenum, const GLsizei*, GLenum, const GLvoid**, GLsizei, GLint*);
	void (OGLCALL* PixelStoref)(GLenum, GLfloat);
	void (OGLCALL* PixelStorei)(GLenum, GLint);
	void (OGLCALL* PointParameterf)(GLenum, GLfloat);
	void (OGLCALL* PointParameteri)(GLenum, GLint);
	void (OGLCALL* PointSize)(GLfloat);
	void (OGLCALL* PolygonMode)(GLenum, GLenum);
	void (OGLCALL* PolygonOffset)(GLfloat, GLfloat);
	void (OGLCALL* PrimitiveRestartIndex)(GLuint);
	void (OGLCALL* ProvokingVertex)(GLenum);
	void (OGLCALL* QueryCounter)(GLuint, GLenum);
	void (OGLCALL* ReadBuffer)(GLenum);
	void (OGLCALL* ReadPixels)(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
	void (OGLCALL* RenderbufferStorage)(GLenum, GLenum, GLsizei, GLsizei);
	void (OGLCALL* RenderbufferStorageMultisample)(GLenum, GLsizei, GLenum, GLsizei, GLsizei);
	void (OGLCALL* SampleCoverage)(GLclampf, GLboolean);
	void (OGLCALL* SampleMaski)(GLuint, GLbitfield);
	void (OGLCALL* SamplerParameterf)(GLuint, GLenum, GLfloat);
	void (OGLCALL* SamplerParameteri)(GLuint, GLenum, GLint);
	void (OGLCALL* SamplerParameterfv)(GLuint, GLenum, const GLfloat*);
	void (OGLCALL* SamplerParameteriv)(GLuint, GLenum, const GLint*);
	void (OGLCALL* SamplerParameterIiv)(GLuint, GLenum, const GLint*);
	void (OGLCALL* SamplerParameterIuiv)(GLuint, GLenum, const GLuint*);
	void (OGLCALL* Scissor)(GLint, GLint, GLsizei, GLsizei);
	void (OGLCALL* ShaderSource)(GLuint, GLsizei, const GLchar**, const GLint*);
	void (OGLCALL* StencilFunc)(GLenum, GLint, GLuint);
	void (OGLCALL* StencilFuncSeparate)(GLenum, GLenum, GLint, GLuint);
	void (OGLCALL* StencilMask)(GLuint);
	void (OGLCALL* StencilMaskSeparate)(GLenum, GLuint);
	void (OGLCALL* StencilOp)(GLenum, GLenum, GLenum);
	void (OGLCALL* StencilOpSeparate)(GLenum, GLenum, GLenum, GLenum);
	void (OGLCALL* TexBuffer)(GLenum, GLenum, GLuint);
	void (OGLCALL* TexImage1D)(GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, const GLvoid*);
	void (OGLCALL* TexImage2D)(GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, const GLvoid*);
	void (OGLCALL* TexImage2DMultisample)(GLenum, GLsizei, GLint, GLsizei, GLsizei, GLboolean);
	void (OGLCALL* TexImage3D)(GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, const GLvoid*);
	void (OGLCALL* TexImage3DMultisample)(GLenum, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean);
	void (OGLCALL* TexParameterf)(GLenum, GLenum, GLfloat);
	void (OGLCALL* TexParameteri)(GLenum, GLenum, GLint);
	void (OGLCALL* TexParameterfv)(GLenum, GLenum, const GLfloat*);
	void (OGLCALL* TexParameteriv)(GLenum, GLenum, const GLint*);
	void (OGLCALL* TexParameterIiv)(GLenum, GLenum, const GLint*);
	void (OGLCALL* TexParameterIuiv)(GLenum, GLenum, const GLuint*);
	void (OGLCALL* TexSubImage1D)(GLenum, GLint, GLint, GLsizei, GLenum, GLenum, const GLvoid*);
	void (OGLCALL* TexSubImage2D)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, const GLvoid*);
	void (OGLCALL* TexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, const GLvoid*);
	void (OGLCALL* TransformFeedbackVaryings)(GLuint, GLsizei, const GLchar**, GLenum);
	void (OGLCALL* Uniform1f)(GLint, GLfloat);
	void (OGLCALL* Uniform2f)(GLint, GLfloat, GLfloat);
	void (OGLCALL* Uniform3f)(GLint, GLfloat, GLfloat, GLfloat);
	void (OGLCALL* Uniform4f)(GLint, GLfloat, GLfloat, GLfloat, GLfloat);
	void (OGLCALL* Uniform1i)(GLint, GLint);
	void (OGLCALL* Uniform2i)(GLint, GLint, GLint);
	void (OGLCALL* Uniform3i)(GLint, GLint, GLint, GLint);
	void (OGLCALL* Uniform4i)(GLint, GLint, GLint, GLint, GLint);
	void (OGLCALL* Uniform1ui)(GLint, GLuint);
	void (OGLCALL* Uniform2ui)(GLint, GLuint, GLuint);
	void (OGLCALL* Uniform3ui)(GLint, GLuint, GLuint, GLuint);
	void (OGLCALL* Uniform4ui)(GLint, GLuint, GLuint, GLuint, GLuint);
	void (OGLCALL* Uniform1fv)(GLint, GLsizei, const GLfloat*);
	void (OGLCALL* Uniform2fv)(GLint, GLsizei, const GLfloat*);
	void (OGLCALL* Uniform3fv)(GLint, GLsizei, const GLfloat*);
	void (OGLCALL* Uniform4fv)(GLint, GLsizei, const GLfloat*);
	void (OGLCALL* Uniform1iv)(GLint, GLsizei, const GLint*);
	void (OGLCALL* Uniform2iv)(GLint, GLsizei, const GLint*);
	void (OGLCALL* Uniform3iv)(GLint, GLsizei, const GLint*);
	void (OGLCALL* Uniform4iv)(GLint, GLsizei, const GLint*);
	void (OGLCALL* Uniform1uiv)(GLint, GLsizei, const GLuint*);
	void (OGLCALL* Uniform2uiv)(GLint, GLsizei, const GLuint*);
	void (OGLCALL* Uniform3uiv)(GLint, GLsizei, const GLuint*);
	void (OGLCALL* Uniform4uiv)(GLint, GLsizei, const GLuint*);
	void (OGLCALL* UniformMatrix2fv)(GLint, GLsizei, GLboolean, const GLfloat*);
	void (OGLCALL* UniformMatrix3fv)(GLint, GLsizei, GLboolean, const GLfloat*);
	void (OGLCALL* UniformMatrix4fv)(GLint, GLsizei, GLboolean, const GLfloat*);
	void (OGLCALL* UniformMatrix2x3fv)(GLint, GLsizei, GLboolean, const GLfloat*);
	void (OGLCALL* UniformMatrix3x2fv)(GLint, GLsizei, GLboolean, const GLfloat*);
	void (OGLCALL* UniformMatrix2x4fv)(GLint, GLsizei, GLboolean, const GLfloat*);
	void (OGLCALL* UniformMatrix4x2fv)(GLint, GLsizei, GLboolean, const GLfloat*);
	void (OGLCALL* UniformMatrix3x4fv)(GLint, GLsizei, GLboolean, const GLfloat*);
	void (OGLCALL* UniformMatrix4x3fv)(GLint, GLsizei, GLboolean, const GLfloat*);
	void (OGLCALL* UniformBlockBinding)(GLuint, GLuint, GLuint);
	GLboolean (OGLCALL* UnmapBuffer)(GLenum);
	void (OGLCALL* UseProgram)(GLuint);
	void (OGLCALL* ValidateProgram)(GLuint);
	void (OGLCALL* VertexAttrib1f)(GLuint, GLfloat);
	void (OGLCALL* VertexAttrib1s)(GLuint, GLshort);
	void (OGLCALL* VertexAttrib1d)(GLuint, GLdouble);
	void (OGLCALL* VertexAttribI1i)(GLuint, GLint);
	void (OGLCALL* VertexAttribI1ui)(GLuint, GLuint);
	void (OGLCALL* VertexAttrib2f)(GLuint, GLfloat, GLfloat);
	void (OGLCALL* VertexAttrib2s)(GLuint, GLshort, GLshort);
	void (OGLCALL* VertexAttrib2d)(GLuint, GLdouble, GLdouble);
	void (OGLCALL* VertexAttribI2i)(GLuint, GLint, GLint);
	void (OGLCALL* VertexAttribI2ui)(GLuint, GLuint, GLuint);
	void (OGLCALL* VertexAttrib3f)(GLuint, GLfloat, GLfloat, GLfloat);
	void (OGLCALL* VertexAttrib3s)(GLuint, GLshort, GLshort, GLshort);
	void (OGLCALL* VertexAttrib3d)(GLuint, GLdouble, GLdouble, GLdouble);
	void (OGLCALL* VertexAttribI3i)(GLuint, GLint, GLint, GLint);
	void (OGLCALL* VertexAttribI3ui)(GLuint, GLuint, GLuint, GLuint);
	void (OGLCALL* VertexAttrib4f)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
	void (OGLCALL* VertexAttrib4s)(GLuint, GLshort, GLshort, GLshort, GLshort);
	void (OGLCALL* VertexAttrib4d)(GLuint, GLdouble, GLdouble, GLdouble, GLdouble);
	void (OGLCALL* VertexAttrib4Nub)(GLuint, GLubyte, GLubyte, GLubyte, GLubyte);
	void (OGLCALL* VertexAttribI4i)(GLuint, GLint, GLint, GLint, GLint);
	void (OGLCALL* VertexAttribI4ui)(GLuint, GLuint, GLuint, GLuint, GLuint);
	void (OGLCALL* VertexAttrib1fv)(GLuint, const GLfloat*);
	void (OGLCALL* VertexAttrib1sv)(GLuint, const GLshort*);
	void (OGLCALL* VertexAttrib1dv)(GLuint, const GLdouble*);
	void (OGLCALL* VertexAttribI1iv)(GLuint, const GLint*);
	void (OGLCALL* VertexAttribI1uiv)(GLuint, const GLuint*);
	void (OGLCALL* VertexAttrib2fv)(GLuint, const GLfloat*);
	void (OGLCALL* VertexAttrib2sv)(GLuint, const GLshort*);
	void (OGLCALL* VertexAttrib2dv)(GLuint, const GLdouble*);
	void (OGLCALL* VertexAttribI2iv)(GLuint, const GLint*);
	void (OGLCALL* VertexAttribI2uiv)(GLuint, const GLuint*);
	void (OGLCALL* VertexAttrib3fv)(GLuint, const GLfloat*);
	void (OGLCALL* VertexAttrib3sv)(GLuint, const GLshort*);
	void (OGLCALL* VertexAttrib3dv)(GLuint, const GLdouble*);
	void (OGLCALL* VertexAttribI3iv)(GLuint, const GLint*);
	void (OGLCALL* VertexAttribI3uiv)(GLuint, const GLuint*);
	void (OGLCALL* VertexAttrib4fv)(GLuint, const GLfloat*);
	void (OGLCALL* VertexAttrib4sv)(GLuint, const GLshort*);
	void (OGLCALL* VertexAttrib4dv)(GLuint, const GLdouble*);
	void (OGLCALL* VertexAttrib4iv)(GLuint, const GLint*);
	void (OGLCALL* VertexAttrib4bv)(GLuint, const GLbyte*);
	void (OGLCALL* VertexAttrib4ubv)(GLuint, const GLubyte*);
	void (OGLCALL* VertexAttrib4usv)(GLuint, const GLushort*);
	void (OGLCALL* VertexAttrib4uiv)(GLuint, const GLuint*);
	void (OGLCALL* VertexAttrib4Nbv)(GLuint, const GLbyte*);
	void (OGLCALL* VertexAttrib4Nsv)(GLuint, const GLshort*);
	void (OGLCALL* VertexAttrib4Niv)(GLuint, const GLint*);
	void (OGLCALL* VertexAttrib4Nubv)(GLuint, const GLubyte*);
	void (OGLCALL* VertexAttrib4Nusv)(GLuint, const GLushort*);
	void (OGLCALL* VertexAttrib4Nuiv)(GLuint, const GLuint*);
	void (OGLCALL* VertexAttribI4bv)(GLuint, const GLbyte*);
	void (OGLCALL* VertexAttribI4ubv)(GLuint, const GLubyte*);
	void (OGLCALL* VertexAttribI4sv)(GLuint, const GLshort*);
	void (OGLCALL* VertexAttribI4usv)(GLuint, const GLushort*);
	void (OGLCALL* VertexAttribI4iv)(GLuint, const GLint*);
	void (OGLCALL* VertexAttribI4uiv)(GLuint, const GLuint*);
	void (OGLCALL* VertexAttribP1ui)(GLuint, GLenum, GLboolean, GLuint);
	void (OGLCALL* VertexAttribP2ui)(GLuint, GLenum, GLboolean, GLuint);
	void (OGLCALL* VertexAttribP3ui)(GLuint, GLenum, GLboolean, GLuint);
	void (OGLCALL* VertexAttribP4ui)(GLuint, GLenum, GLboolean, GLuint);
	void (OGLCALL* VertexAttribDivisor)(GLuint, GLuint);
	void (OGLCALL* VertexAttribPointer)(GLuint, GLint, GLenum, GLboolean, GLsizei, const GLvoid*);
	void (OGLCALL* VertexAttribIPointer)(GLuint, GLint, GLenum, GLsizei, const GLvoid*);
	void (OGLCALL* Viewport)(GLint, GLint, GLsizei, GLsizei);
	void (OGLCALL* WaitSync)(GLsync, GLbitfield, GLuint64);
	/*======================================*/
	void* libGL; /* OpenGL library handle */
	char* libGLName; /* OpenGL library name */
} SST_GLAPI;
#endif

