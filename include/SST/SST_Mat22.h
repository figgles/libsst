/*  NEXT FILE  */
/* This is an AUTOGENERATED FILE generated from the bash script 'dumpheader.sh', last generated on Fri Apr 18 19:06:56 CDT 2014  */
#ifndef __SST_MAT22_H__
#define __SST_MAT22_H__
#include <SST/SST_Build.h>
#include <SST/SST_Vec2.h>
#include <pstdbool.h>
#if SST_COMPILER == SST_COMPILER_MSVC
#pragma warning(disable:4201)
#endif
#ifdef __cplusplus
extern "C" {
#endif
		typedef SST_ALIGN_PREFIX(16) union SST_Mat22f
		{
				float v[4];
				struct { float a11, a21, a12, a22; };
		} SST_ALIGN_SUFFIX(16) SST_Mat22f;

		typedef SST_ALIGN_PREFIX(16) union SST_Mat22d
		{
				double v[4];
				struct { double a11, a21, a12, a22; };
		} SST_ALIGN_SUFFIX(16) SST_Mat22d;

		typedef SST_ALIGN_PREFIX(16) union SST_Mat22i
		{
				int v[4];
				struct { int a11, a21, a12, a22; };
		} SST_ALIGN_SUFFIX(16) SST_Mat22i;

		typedef SST_ALIGN_PREFIX(16) union SST_Mat22u
		{
				unsigned int v[4];
				struct { unsigned int a11, a21, a12, a22; };
		} SST_ALIGN_SUFFIX(16) SST_Mat22u;

		/*##########################################################
		##  float 
		##########################################################*/
		void SST_Math_Mat22fAdd(const SST_Mat22f* RESTRICT _A, const SST_Mat22f* RESTRICT _B, SST_Mat22f* RESTRICT _out);
		void SST_Math_Mat22fAddLocal(SST_Mat22f* RESTRICT _A, const SST_Mat22f* RESTRICT _B);
		void SST_Math_Mat22fSubtract(const SST_Mat22f* RESTRICT _A, const SST_Mat22f* RESTRICT _B, SST_Mat22f* RESTRICT _out);
		void SST_Math_Mat22fSubtractLocal(SST_Mat22f* RESTRICT _A, const SST_Mat22f* RESTRICT _B);
		void SST_Math_Mat22fMultiplyElementwise(const SST_Mat22f* RESTRICT _A, const SST_Mat22f* RESTRICT _B, SST_Mat22f* RESTRICT _out);
		void SST_Math_Mat22fMultiplyElementwiseLocal(SST_Mat22f* RESTRICT _A, const SST_Mat22f* RESTRICT _B);
		void SST_Math_Mat22fMultiplyScalar(const SST_Mat22f* RESTRICT _A, const float k,  SST_Mat22f* RESTRICT _out);
		void SST_Math_Mat22fMultiplyScalarLocal(SST_Mat22f* RESTRICT _A, const float k);
		void SST_Math_Mat22fMultiplyMatrix(const SST_Mat22f* _A, const SST_Mat22f*  RESTRICT _B, SST_Mat22f*  RESTRICT _out);
		void SST_Math_Mat22fMultiplyMatrixLocal(SST_Mat22f*  RESTRICT _A, const SST_Mat22f*  RESTRICT _B);
		void SST_Math_Mat22fMultiplyVector(const SST_Mat22f*  RESTRICT _A, const SST_Vec2f*  RESTRICT _v, SST_Vec2f*  RESTRICT _out);
		void SST_Math_Mat22fMultiplyVectorLocal(const SST_Mat22f*  RESTRICT _A, SST_Vec2f*  RESTRICT _v);
		void SST_Math_Mat22fTranspose(const SST_Mat22f*  RESTRICT _A, SST_Mat22f*  RESTRICT _out);
		void SST_Math_Mat22fTransposeLocal(SST_Mat22f*  RESTRICT _A);
		bool SST_Math_Mat22fCheckOrthonormal(const SST_Mat22f* _A);
		float SST_Math_Mat22fDeterminant(const SST_Mat22f* _A);
		void SST_Math_Mat22fInvert(const SST_Mat22f*  RESTRICT _A, SST_Mat22f*  RESTRICT _out);
		void SST_Math_Mat22fInvertLocal(SST_Mat22f* RESTRICT _A);
		void SST_Math_Mat22fCreateLU(const SST_Mat22f* RESTRICT _A, SST_Mat22f* RESTRICT _LU);
		void SST_Math_Mat22fApplyLUMat(const SST_Mat22f* _LU, const SST_Mat22f* _A, SST_Mat22f* _out);
		void SST_Math_Mat22fApplyLUMatLocal(const SST_Mat22f* _LU,SST_Mat22f* _A);
		void SST_Math_Mat22fApplyLUVec(const SST_Mat22f* _LU, const SST_Vec2f* _v,SST_Vec2f* _w);
		void SST_Math_Mat22fApplyLUVecLocal(const SST_Mat22f* _LU,SST_Vec2f* _w);
		void SST_Math_Mat22fCreateLULocal(SST_Mat22f* RESTRICT _A);

		/*##########################################################
		##  double 
		##########################################################*/
		void SST_Math_Mat22dAdd(const SST_Mat22d* RESTRICT _A, const SST_Mat22d* RESTRICT _B, SST_Mat22d* RESTRICT _out);
		void SST_Math_Mat22dAddLocal(SST_Mat22d* RESTRICT _A, const SST_Mat22d* RESTRICT _B);
		void SST_Math_Mat22dSubtract(const SST_Mat22d* RESTRICT _A, const SST_Mat22d* RESTRICT _B, SST_Mat22d* RESTRICT _out);
		void SST_Math_Mat22dSubtractLocal(SST_Mat22d* RESTRICT _A, const SST_Mat22d* RESTRICT _B);
		void SST_Math_Mat22dMultiplyElementwise(const SST_Mat22d* RESTRICT _A, const SST_Mat22d* RESTRICT _B, SST_Mat22d* RESTRICT _out);
		void SST_Math_Mat22dMultiplyElementwiseLocal(SST_Mat22d* RESTRICT _A, const SST_Mat22d* RESTRICT _B);
		void SST_Math_Mat22dMultiplyScalar(const SST_Mat22d* RESTRICT _A, const double k,  SST_Mat22d* RESTRICT _out);
		void SST_Math_Mat22dMultiplyScalarLocal(SST_Mat22d* RESTRICT _A, const double k);
		void SST_Math_Mat22dMultiplyMatrix(const SST_Mat22d* _A, const SST_Mat22d*  RESTRICT _B, SST_Mat22d*  RESTRICT _out);
		void SST_Math_Mat22dMultiplyMatrixLocal(SST_Mat22d*  RESTRICT _A, const SST_Mat22d*  RESTRICT _B);
		void SST_Math_Mat22dMultiplyVector(const SST_Mat22d*  RESTRICT _A, const SST_Vec2d*  RESTRICT _v, SST_Vec2d*  RESTRICT _out);
		void SST_Math_Mat22dMultiplyVectorLocal(const SST_Mat22d*  RESTRICT _A, SST_Vec2d*  RESTRICT _v);
		void SST_Math_Mat22dTranspose(const SST_Mat22d*  RESTRICT _A, SST_Mat22d*  RESTRICT _out);
		void SST_Math_Mat22dTransposeLocal(SST_Mat22d*  RESTRICT _A);
		bool SST_Math_Mat22dCheckOrthonormal(const SST_Mat22d* _A);
		double SST_Math_Mat22dDeterminant(const SST_Mat22d* _A);
		void SST_Math_Mat22dInvert(const SST_Mat22d*  RESTRICT _A, SST_Mat22d*  RESTRICT _out);
		void SST_Math_Mat22dInvertLocal(SST_Mat22d* RESTRICT _A);
		void SST_Math_Mat22dCreateLU(const SST_Mat22d* RESTRICT _A, SST_Mat22d* RESTRICT _LU);
		void SST_Math_Mat22dApplyLUMat(const SST_Mat22d* _LU, const SST_Mat22d* _A, SST_Mat22d* _out);
		void SST_Math_Mat22dApplyLUMatLocal(const SST_Mat22d* _LU,SST_Mat22d* _A);
		void SST_Math_Mat22dApplyLUVec(const SST_Mat22d* _LU, const SST_Vec2d* _v,SST_Vec2d* _w);
		void SST_Math_Mat22dApplyLUVecLocal(const SST_Mat22d* _LU,SST_Vec2d* _w);
		void SST_Math_Mat22dCreateLULocal(SST_Mat22d* RESTRICT _A);

		/*##########################################################
		##  int 
		##########################################################*/
		void SST_Math_Mat22iAdd(const SST_Mat22i* RESTRICT _A, const SST_Mat22i* RESTRICT _B, SST_Mat22i* RESTRICT _out);
		void SST_Math_Mat22iAddLocal(SST_Mat22i* RESTRICT _A, const SST_Mat22i* RESTRICT _B);
		void SST_Math_Mat22iSubtract(const SST_Mat22i* RESTRICT _A, const SST_Mat22i* RESTRICT _B, SST_Mat22i* RESTRICT _out);
		void SST_Math_Mat22iSubtractLocal(SST_Mat22i* RESTRICT _A, const SST_Mat22i* RESTRICT _B);
		void SST_Math_Mat22iMultiplyElementwise(const SST_Mat22i* RESTRICT _A, const SST_Mat22i* RESTRICT _B, SST_Mat22i* RESTRICT _out);
		void SST_Math_Mat22iMultiplyElementwiseLocal(SST_Mat22i* RESTRICT _A, const SST_Mat22i* RESTRICT _B);
		void SST_Math_Mat22iMultiplyScalar(const SST_Mat22i* RESTRICT _A, const int k,  SST_Mat22i* RESTRICT _out);
		void SST_Math_Mat22iMultiplyScalarLocal(SST_Mat22i* RESTRICT _A, const int k);
		void SST_Math_Mat22iMultiplyMatrix(const SST_Mat22i* _A, const SST_Mat22i*  RESTRICT _B, SST_Mat22i*  RESTRICT _out);
		void SST_Math_Mat22iMultiplyMatrixLocal(SST_Mat22i*  RESTRICT _A, const SST_Mat22i*  RESTRICT _B);
		void SST_Math_Mat22iMultiplyVector(const SST_Mat22i*  RESTRICT _A, const SST_Vec2i*  RESTRICT _v, SST_Vec2i*  RESTRICT _out);
		void SST_Math_Mat22iMultiplyVectorLocal(const SST_Mat22i*  RESTRICT _A, SST_Vec2i*  RESTRICT _v);
		void SST_Math_Mat22iTranspose(const SST_Mat22i*  RESTRICT _A, SST_Mat22i*  RESTRICT _out);
		void SST_Math_Mat22iTransposeLocal(SST_Mat22i*  RESTRICT _A);
		bool SST_Math_Mat22iCheckOrthonormal(const SST_Mat22i* _A);
		int SST_Math_Mat22iDeterminant(const SST_Mat22i* _A);

		/*##########################################################
		##  unsigned int
		##########################################################*/
		void SST_Math_Mat22uAdd(const SST_Mat22u* RESTRICT _A, const SST_Mat22u* RESTRICT _B, SST_Mat22u* RESTRICT _out);
		void SST_Math_Mat22uAddLocal(SST_Mat22u* RESTRICT _A, const SST_Mat22u* RESTRICT _B);
		void SST_Math_Mat22uSubtract(const SST_Mat22u* RESTRICT _A, const SST_Mat22u* RESTRICT _B, SST_Mat22u* RESTRICT _out);
		void SST_Math_Mat22uSubtractLocal(SST_Mat22u* RESTRICT _A, const SST_Mat22u* RESTRICT _B);
		void SST_Math_Mat22uMultiplyElementwise(const SST_Mat22u* RESTRICT _A, const SST_Mat22u* RESTRICT _B, SST_Mat22u* RESTRICT _out);
		void SST_Math_Mat22uMultiplyElementwiseLocal(SST_Mat22u* RESTRICT _A, const SST_Mat22u* RESTRICT _B);
		void SST_Math_Mat22uMultiplyScalar(const SST_Mat22u* RESTRICT _A, const unsigned int k,  SST_Mat22u* RESTRICT _out);
		void SST_Math_Mat22uMultiplyScalarLocal(SST_Mat22u* RESTRICT _A, const unsigned int k);
		void SST_Math_Mat22uMultiplyMatrix(const SST_Mat22u* _A, const SST_Mat22u*  RESTRICT _B, SST_Mat22u*  RESTRICT _out);
		void SST_Math_Mat22uMultiplyMatrixLocal(SST_Mat22u*  RESTRICT _A, const SST_Mat22u*  RESTRICT _B);
		void SST_Math_Mat22uMultiplyVector(const SST_Mat22u*  RESTRICT _A, const SST_Vec2u*  RESTRICT _v, SST_Vec2u*  RESTRICT _out);
		void SST_Math_Mat22uMultiplyVectorLocal(const SST_Mat22u*  RESTRICT _A, SST_Vec2u*  RESTRICT _v);
		void SST_Math_Mat22uTranspose(const SST_Mat22u*  RESTRICT _A, SST_Mat22u*  RESTRICT _out);
		void SST_Math_Mat22uTransposeLocal(SST_Mat22u*  RESTRICT _A);
#ifdef __cplusplus
}
#endif
#if SST_COMPILER == SST_COMPILER_MSVC
#pragma warning(default:4201)
#endif
#endif
