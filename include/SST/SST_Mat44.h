/*  NEXT FILE  */
/* This is an AUTOGENERATED FILE generated from the bash script 'dumpheader.sh', last generated on Fri Apr 18 19:06:56 CDT 2014 */
#ifndef __SST_MAT44_H__
#define __SST_MAT44_H__
#include <SST/SST_Build.h>
#include <SST/SST_Vec4.h>
#include <pstdbool.h>

#if SST_COMPILER == SST_COMPILER_MSVC
#pragma warning(disable:4201)
#endif
#ifdef __cplusplus
extern "C" {
#endif

		typedef SST_ALIGN_PREFIX(16) union SST_Mat44f
		{
				float v[16];
				struct { float a11, a21, a31, a41,
						a12, a22, a32, a42,
						a13, a23, a33, a43,
						a14, a24, a34, a44; };
		} SST_ALIGN_SUFFIX(16) SST_Mat44f;

		typedef SST_ALIGN_PREFIX(16) union SST_Mat44d
		{
				double v[16];
				struct { double a11, a21, a31, a41,
						a12, a22, a32, a42,
						a13, a23, a33, a43,
						a14, a24, a34, a44; };
		} SST_ALIGN_SUFFIX(16) SST_Mat44d;

		typedef SST_ALIGN_PREFIX(16) union SST_Mat44i
		{
				int v[16];
				struct { int a11, a21, a31, a41,
						a12, a22, a32, a42,
						a13, a23, a33, a43,
						a14, a24, a34, a44; };
		} SST_ALIGN_SUFFIX(16) SST_Mat44i;

		typedef SST_ALIGN_PREFIX(16) union SST_Mat44u
		{
				unsigned int v[16];
				struct { unsigned int a11, a21, a31, a41,
						a12, a22, a32, a42,
						a13, a23, a33, a43,
						a14, a24, a34, a44; };
		} SST_ALIGN_SUFFIX(16) SST_Mat44u;

		/*##########################################################
		##  float 
		##########################################################*/
		void SST_Math_Mat44fAdd(const SST_Mat44f* RESTRICT _A, const SST_Mat44f* RESTRICT _B, SST_Mat44f* RESTRICT _out);
		void SST_Math_Mat44fAddLocal(SST_Mat44f* RESTRICT _A, const SST_Mat44f* RESTRICT _B);
		void SST_Math_Mat44fSubtract(const SST_Mat44f* RESTRICT _A, const SST_Mat44f* RESTRICT _B, SST_Mat44f* RESTRICT _out);
		void SST_Math_Mat44fSubtractLocal(SST_Mat44f* RESTRICT _A, const SST_Mat44f* RESTRICT _B);
		void SST_Math_Mat44fMultiplyElementwise(const SST_Mat44f* RESTRICT _A, const SST_Mat44f* RESTRICT _B, SST_Mat44f* RESTRICT _out);
		void SST_Math_Mat44fMultiplyElementwiseLocal(SST_Mat44f* RESTRICT _A, const SST_Mat44f* RESTRICT _B);
		void SST_Math_Mat44fMultiplyScalar(const SST_Mat44f* RESTRICT _A, const float k,  SST_Mat44f* RESTRICT _out);
		void SST_Math_Mat44fMultiplyScalarLocal(SST_Mat44f* RESTRICT _A, const float k);
		void SST_Math_Mat44fMultiplyMatrix(const SST_Mat44f* _A, const SST_Mat44f*  RESTRICT _B, SST_Mat44f*  RESTRICT _out);
		void SST_Math_Mat44fMultiplyMatrixLocal(SST_Mat44f*  RESTRICT _A, const SST_Mat44f*  RESTRICT _B);
		void SST_Math_Mat44fMultiplyVector(const SST_Mat44f*  RESTRICT _A, const SST_Vec4f*  RESTRICT _v, SST_Vec4f*  RESTRICT _out);
		void SST_Math_Mat44fMultiplyVectorLocal(const SST_Mat44f*  RESTRICT _A, SST_Vec4f*  RESTRICT _v);
		void SST_Math_Mat44fTranspose(const SST_Mat44f*  RESTRICT _A, SST_Mat44f*  RESTRICT _out);
		void SST_Math_Mat44fTransposeLocal(SST_Mat44f*  RESTRICT _A);
		bool SST_Math_Mat44fCheckOrthonormal(const SST_Mat44f* _A);
		float SST_Math_Mat44fDeterminant(const SST_Mat44f* _A);
		void SST_Math_Mat44fInvert(const SST_Mat44f*  RESTRICT _A, SST_Mat44f*  RESTRICT _out);
		void SST_Math_Mat44fInvertLocal(SST_Mat44f* RESTRICT _A);
		void SST_Math_Mat44fCreateLU(const SST_Mat44f* RESTRICT _A, SST_Mat44f* RESTRICT _LU);
		void SST_Math_Mat44fApplyLUMat(const SST_Mat44f* _LU, const SST_Mat44f* _A, SST_Mat44f* _out);
		void SST_Math_Mat44fApplyLUMatLocal(const SST_Mat44f* _LU,SST_Mat44f* _A);
		void SST_Math_Mat44fApplyLUVec(const SST_Mat44f* _LU, const SST_Vec4f* _v,SST_Vec4f* _w);
		void SST_Math_Mat44fApplyLUVecLocal(const SST_Mat44f* _LU,SST_Vec4f* _w);
		void SST_Math_Mat44fCreateLULocal(SST_Mat44f* RESTRICT _A);

		/*##########################################################
		##  double 
		##########################################################*/
		void SST_Math_Mat44dAdd(const SST_Mat44d* RESTRICT _A, const SST_Mat44d* RESTRICT _B, SST_Mat44d* RESTRICT _out);
		void SST_Math_Mat44dAddLocal(SST_Mat44d* RESTRICT _A, const SST_Mat44d* RESTRICT _B);
		void SST_Math_Mat44dSubtract(const SST_Mat44d* RESTRICT _A, const SST_Mat44d* RESTRICT _B, SST_Mat44d* RESTRICT _out);
		void SST_Math_Mat44dSubtractLocal(SST_Mat44d* RESTRICT _A, const SST_Mat44d* RESTRICT _B);
		void SST_Math_Mat44dMultiplyElementwise(const SST_Mat44d* RESTRICT _A, const SST_Mat44d* RESTRICT _B, SST_Mat44d* RESTRICT _out);
		void SST_Math_Mat44dMultiplyElementwiseLocal(SST_Mat44d* RESTRICT _A, const SST_Mat44d* RESTRICT _B);
		void SST_Math_Mat44dMultiplyScalar(const SST_Mat44d* RESTRICT _A, const double k,  SST_Mat44d* RESTRICT _out);
		void SST_Math_Mat44dMultiplyScalarLocal(SST_Mat44d* RESTRICT _A, const double k);
		void SST_Math_Mat44dMultiplyMatrix(const SST_Mat44d* _A, const SST_Mat44d*  RESTRICT _B, SST_Mat44d*  RESTRICT _out);
		void SST_Math_Mat44dMultiplyMatrixLocal(SST_Mat44d*  RESTRICT _A, const SST_Mat44d*  RESTRICT _B);
		void SST_Math_Mat44dMultiplyVector(const SST_Mat44d*  RESTRICT _A, const SST_Vec4d*  RESTRICT _v, SST_Vec4d*  RESTRICT _out);
		void SST_Math_Mat44dMultiplyVectorLocal(const SST_Mat44d*  RESTRICT _A, SST_Vec4d*  RESTRICT _v);
		void SST_Math_Mat44dTranspose(const SST_Mat44d*  RESTRICT _A, SST_Mat44d*  RESTRICT _out);
		void SST_Math_Mat44dTransposeLocal(SST_Mat44d*  RESTRICT _A);
		bool SST_Math_Mat44dCheckOrthonormal(const SST_Mat44d* _A);
		double SST_Math_Mat44dDeterminant(const SST_Mat44d* _A);
		void SST_Math_Mat44dInvert(const SST_Mat44d*  RESTRICT _A, SST_Mat44d*  RESTRICT _out);
		void SST_Math_Mat44dInvertLocal(SST_Mat44d* RESTRICT _A);
		void SST_Math_Mat44dCreateLU(const SST_Mat44d* RESTRICT _A, SST_Mat44d* RESTRICT _LU);
		void SST_Math_Mat44dApplyLUMat(const SST_Mat44d* _LU, const SST_Mat44d* _A, SST_Mat44d* _out);
		void SST_Math_Mat44dApplyLUMatLocal(const SST_Mat44d* _LU,SST_Mat44d* _A);
		void SST_Math_Mat44dApplyLUVec(const SST_Mat44d* _LU, const SST_Vec4d* _v,SST_Vec4d* _w);
		void SST_Math_Mat44dApplyLUVecLocal(const SST_Mat44d* _LU,SST_Vec4d* _w);
		void SST_Math_Mat44dCreateLULocal(SST_Mat44d* RESTRICT _A);

		/*##########################################################
		##  int 
		##########################################################*/
		void SST_Math_Mat44iAdd(const SST_Mat44i* RESTRICT _A, const SST_Mat44i* RESTRICT _B, SST_Mat44i* RESTRICT _out);
		void SST_Math_Mat44iAddLocal(SST_Mat44i* RESTRICT _A, const SST_Mat44i* RESTRICT _B);
		void SST_Math_Mat44iSubtract(const SST_Mat44i* RESTRICT _A, const SST_Mat44i* RESTRICT _B, SST_Mat44i* RESTRICT _out);
		void SST_Math_Mat44iSubtractLocal(SST_Mat44i* RESTRICT _A, const SST_Mat44i* RESTRICT _B);
		void SST_Math_Mat44iMultiplyElementwise(const SST_Mat44i* RESTRICT _A, const SST_Mat44i* RESTRICT _B, SST_Mat44i* RESTRICT _out);
		void SST_Math_Mat44iMultiplyElementwiseLocal(SST_Mat44i* RESTRICT _A, const SST_Mat44i* RESTRICT _B);
		void SST_Math_Mat44iMultiplyScalar(const SST_Mat44i* RESTRICT _A, const int k,  SST_Mat44i* RESTRICT _out);
		void SST_Math_Mat44iMultiplyScalarLocal(SST_Mat44i* RESTRICT _A, const int k);
		void SST_Math_Mat44iMultiplyMatrix(const SST_Mat44i* _A, const SST_Mat44i*  RESTRICT _B, SST_Mat44i*  RESTRICT _out);
		void SST_Math_Mat44iMultiplyMatrixLocal(SST_Mat44i*  RESTRICT _A, const SST_Mat44i*  RESTRICT _B);
		void SST_Math_Mat44iMultiplyVector(const SST_Mat44i*  RESTRICT _A, const SST_Vec4i*  RESTRICT _v, SST_Vec4i*  RESTRICT _out);
		void SST_Math_Mat44iMultiplyVectorLocal(const SST_Mat44i*  RESTRICT _A, SST_Vec4i*  RESTRICT _v);
		void SST_Math_Mat44iTranspose(const SST_Mat44i*  RESTRICT _A, SST_Mat44i*  RESTRICT _out);
		void SST_Math_Mat44iTransposeLocal(SST_Mat44i*  RESTRICT _A);
		bool SST_Math_Mat44iCheckOrthonormal(const SST_Mat44i* _A);
		int SST_Math_Mat44iDeterminant(const SST_Mat44i* _A);

		/*##########################################################
		##  unsigned int
		##########################################################*/
		void SST_Math_Mat44uAdd(const SST_Mat44u* RESTRICT _A, const SST_Mat44u* RESTRICT _B, SST_Mat44u* RESTRICT _out);
		void SST_Math_Mat44uAddLocal(SST_Mat44u* RESTRICT _A, const SST_Mat44u* RESTRICT _B);
		void SST_Math_Mat44uSubtract(const SST_Mat44u* RESTRICT _A, const SST_Mat44u* RESTRICT _B, SST_Mat44u* RESTRICT _out);
		void SST_Math_Mat44uSubtractLocal(SST_Mat44u* RESTRICT _A, const SST_Mat44u* RESTRICT _B);
		void SST_Math_Mat44uMultiplyElementwise(const SST_Mat44u* RESTRICT _A, const SST_Mat44u* RESTRICT _B, SST_Mat44u* RESTRICT _out);
		void SST_Math_Mat44uMultiplyElementwiseLocal(SST_Mat44u* RESTRICT _A, const SST_Mat44u* RESTRICT _B);
		void SST_Math_Mat44uMultiplyScalar(const SST_Mat44u* RESTRICT _A, const unsigned int k,  SST_Mat44u* RESTRICT _out);
		void SST_Math_Mat44uMultiplyScalarLocal(SST_Mat44u* RESTRICT _A, const unsigned int k);
		void SST_Math_Mat44uMultiplyMatrix(const SST_Mat44u* _A, const SST_Mat44u*  RESTRICT _B, SST_Mat44u*  RESTRICT _out);
		void SST_Math_Mat44uMultiplyMatrixLocal(SST_Mat44u*  RESTRICT _A, const SST_Mat44u*  RESTRICT _B);
		void SST_Math_Mat44uMultiplyVector(const SST_Mat44u*  RESTRICT _A, const SST_Vec4u*  RESTRICT _v, SST_Vec4u*  RESTRICT _out);
		void SST_Math_Mat44uMultiplyVectorLocal(const SST_Mat44u*  RESTRICT _A, SST_Vec4u*  RESTRICT _v);
		void SST_Math_Mat44uTranspose(const SST_Mat44u*  RESTRICT _A, SST_Mat44u*  RESTRICT _out);
		void SST_Math_Mat44uTransposeLocal(SST_Mat44u*  RESTRICT _A);
#ifdef __cplusplus
}
#endif
#if SST_COMPILER == SST_COMPILER_MSVC
#pragma warning(default:4201)
#endif
#endif
